// This file is @generated by cargo-config2-internal-codegen
// (gen_assert_impl function at tools/codegen/src/main.rs).
// It is not intended for manual editing.

#![cfg_attr(rustfmt, rustfmt::skip)]

const _: fn() = || {
    fn assert_auto_traits<T: ?Sized + Send + Sync + Unpin>() {}
    assert_auto_traits::<crate::de::Config>();
    assert_auto_traits::<crate::de::BuildConfig>();
    assert_auto_traits::<crate::de::TargetConfig>();
    assert_auto_traits::<crate::de::DocConfig>();
    assert_auto_traits::<crate::de::Env>();
    assert_auto_traits::<crate::de::FutureIncompatReportConfig>();
    assert_auto_traits::<crate::de::NetConfig>();
    assert_auto_traits::<crate::de::TermConfig>();
    assert_auto_traits::<crate::de::TermProgress>();
    assert_auto_traits::<crate::de::When>();
    assert_auto_traits::<crate::de::Frequency>();
    assert_auto_traits::<crate::de::Rustflags>();
    assert_auto_traits::<crate::de::StringList>();
    assert_auto_traits::<crate::de::StringOrArray>();
    assert_auto_traits::<crate::easy::Config>();
    assert_auto_traits::<crate::easy::BuildConfig>();
    assert_auto_traits::<crate::easy::TargetConfig>();
    assert_auto_traits::<crate::easy::DocConfig>();
    assert_auto_traits::<crate::easy::Env>();
    assert_auto_traits::<crate::easy::FutureIncompatReportConfig>();
    assert_auto_traits::<crate::easy::NetConfig>();
    assert_auto_traits::<crate::easy::TermConfig>();
    assert_auto_traits::<crate::easy::TermProgress>();
    assert_auto_traits::<crate::easy::Rustflags>();
    assert_auto_traits::<crate::easy::PathAndArgs>();
    assert_auto_traits::<crate::easy::StringList>();
    assert_auto_traits::<crate::Config>();
    assert_auto_traits::<crate::BuildConfig>();
    assert_auto_traits::<crate::TargetConfig>();
    assert_auto_traits::<crate::DocConfig>();
    assert_auto_traits::<crate::Env>();
    assert_auto_traits::<crate::FutureIncompatReportConfig>();
    assert_auto_traits::<crate::NetConfig>();
    assert_auto_traits::<crate::TermConfig>();
    assert_auto_traits::<crate::TermProgress>();
    assert_auto_traits::<crate::Rustflags>();
    assert_auto_traits::<crate::paths::ConfigPaths<'_>>();
    assert_auto_traits::<crate::resolve::ResolveContext>();
    assert_auto_traits::<crate::resolve::TargetTriple>();
    assert_auto_traits::<crate::value::Definition>();
};
